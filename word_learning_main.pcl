# Main PCL script that is run directly after the sce

# Load in the relevant pcl files. Note that order matters!
include_once "word_learning_parameters.pcl";
include_once "word_learning_subroutines.pcl";

open_stimulus_data_file();

if(!all_sound_files_exist()) then exit("Not all sound files could be found! (See terminal for details)"); end;

if(!all_movie_files_exist()) then exit("Not all video files could be found! (See terminal for details)"); end;
setup_movies();

if(!all_image_files_exist()) then exit("Not all image files could be found! (See terminal for details)"); end;

if (output_port_manager.port_count () == 0) then	###controls for whether you really have selected an output port
	display("Forgot to add an output port!!!", 3)
end;

output_port oport = output_port_manager.get_port (1);

## set some SDL-based defaults
inter_group_interval.set_duration(IGI_DURATION);

## GENERATE ORDER OF TRIALS
array<int> TRIAL_ORDER[0];
generate_trial_order(TRIAL_ORDER);

term.print("Trial order (by index): " );
term.print_line(TRIAL_ORDER);

### Starting with an attention grabber####
int attentiongrabber_index=1; # so you know which attention grabber to play, starting with the first 1

MOVIES[attentiongrabber_index].prepare();
attention_event.set_stimulus(MOVIES[attentiongrabber_index]);
attentiongrabber_trial.present(); # we start with an attention grabber

##############################
### MAIN TRIAL DEFINITION####
##############################

loop
   int i_trial 	= 1;  #you create a new variable called 'i_trial' (1-240)
	int last_group = 0;
until
  i_trial > BLOCKS.count()
begin 
	int randomised_order_trial = TRIAL_ORDER[i_trial];
	
	## BACKGROUND IGI
	background.set_event_code ( "inter_group_interval:" + string(BLOCKS[randomised_order_trial]));
	background.set_port_code (BLOCKS[randomised_order_trial]);
	
	## only imply the group interval if we are between groups!
	if (last_group != GROUP_IDENTITIES[randomised_order_trial] ) then
		inter_group_interval.present();
		last_group = GROUP_IDENTITIES[randomised_order_trial];
	end;
	
	## SETUP SOUNDFILE
	string f = SOUND_DIR + SOUND_FILES[randomised_order_trial]; #new variable 'f' where the wavfile (as string) is defined as (abc.wav)
	soundfile.set_filename (f);
	soundfile.load();
	
	if (ONSET_TRIGGERS[randomised_order_trial] > 0) then
		wavevent.set_port_code(ONSET_TRIGGERS[randomised_order_trial]);
	else
		wavevent.set_port_code(0);
	end;
	
	array<double> port_codes[1];
	wavevent.get_port_codes(port_codes);
	wavevent.set_stimulus( snd );
	wavevent.set_event_code (SOUND_FILES[randomised_order_trial] + ":"  + string(port_codes[1]));
	
	## SETUP PICTURES
	if ( blank_image_trial(randomised_order_trial) ) then
		set_blank_main_trial()
	else
		set_main_trial_with_optional_blink(randomised_order_trial)
	end;
	
	## Present main
	main_trial.present();

	bit.unload();
	soundfile.unload(); #unload so that new wav file can be played 
	
	if (item_in_int_array(i_trial, TRIALS_TO_PAUZE_AFTER)) then
		pauze.present(); #"PAUZE!"
  end;
  

  if (i_trial == BLOCKS.count()) then # we are in the final trial
	play_einde.present ();
  end;

  i_trial = i_trial + 1 ; 
end;